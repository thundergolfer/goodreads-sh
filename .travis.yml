language: rust

# Cache `cargo install`ed tools, but don't cache the project's `target`
# directory (which ends up over-caching and filling all disk space!)
cache:
  directories:
    - /home/travis/.cargo

DEPLOY_TO_GITHUB: &DEPLOY_TO_GITHUB
  before_deploy:
    - git config --local user.name "Jonathon Belotti"
    - git config --local user.email "jonathon.i.belotti@gmail.com"
    - name="goodreads-sh-$TRAVIS_TAG-$TARGET"
    - mkdir $name
    - cp target/$TARGET/release/goodreads-sh $name/
    - cp README.md LICENSE $name/
    - tar czvf $name.tar.gz $name
  deploy:
    provider: releases
    api_key:
      secure: "Oym5kx/RGWJJPT6AJ8NyKdDSJFFawNHTyJjdTwiTgiMEtVcb2TB9TOUwY1uNs1o3Hx32oWSpt4dOqlmujfa/EX93EfgbMOE2XEpMDX/mxaCYQ0smlsIyFwn5rYzOC4MgP2mbikTypruQI/NUOtriG13TIRbAFL/2UaPhSsBMQ4eL/N5WFO4w2innVv+B2Q6cukj3uJd7JATnyP65BfUAifEoSeGC3BGiPJxbyh5QCgbz2gZ0vzxvW/Q93OxP/4WCJ567jwZNvIrBz1Z7rrc3JkGFOMPunz+gu187LEKXFP6plZfFzherHF8NZTxdGoxUi2Kp9C/z2YT6U/5bSgoUxX1w347vUT1Y+ooN3LGwyNCwFG5PKJtBrQKaWJ1huu4YHMBh0b1PbwpWc5d53fLynm1UC/LrEDO3dABFqXLnpfEjoJPTNX0Z9pY5fZ3RDZV8/Q0iebnrv+U1OJOxfeVCGUwKBAvepaHz32y2kke4cDkR+KZTixYiJ7n2yx5pv2YUZkkaJfPkuVHZ3BorR8YirIZ5KorXRKuI93k688rR20qFgfSf++AXGi2DwTx+HgNKe2Homv+TzAs+2MoPM0cJ+oPMftWUI9VpknwGhh/pwVj0OBraEQA5SB1bWZwwUDhHAhhtL65GqsSMZ9RtYYmdsUUbE3aPkPb4GpQfcvuqAx0="
    file: goodreads-sh-$TRAVIS_TAG-$TARGET.tar.gz
    skip_cleanup: true
    on:
      tags: true

matrix:
  include:

    - name: Tests
      env: RUST_BACKTRACE=1
      # Pin temporarily because rustfmt is not available in nightly
      # Ref: https://github.com/rust-lang/rustup.rs/issues/1566
      rust: nightly-2019-10-04
      addons:
        firefox: latest
        chrome: stable
      script:
        - cargo test --locked
        - rustup component add rustfmt
        - cargo fmt --version
        - cargo fmt --all -- --check

    - name: Linux Binary
      env:
        - TARGET=x86_64-unknown-linux-musl
        - PKG_CONFIG_ALLOW_CROSS=1
      rust: nightly
      before_script:
        - rustup target add $TARGET
        - curl https://www.openssl.org/source/openssl-1.0.2l.tar.gz | tar xzf -
        - (cd openssl-1.0.2l &&
          CC=musl-gcc ./Configure --prefix=$HOME/openssl-musl no-dso no-ssl2 no-ssl3 linux-x86_64 -fPIC &&
          make -j$(nproc) &&
          make install)
        - export OPENSSL_DIR=$HOME/openssl-musl
      script: cargo build --release --target $TARGET --locked
      addons:
        apt:
          packages:
            - musl-tools
            - libssl-dev
      <<: *DEPLOY_TO_GITHUB

    - name: macOS Binary
      env: MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
      script: cargo build --release --target $TARGET --locked
      install: true
      <<: *DEPLOY_TO_GITHUB

notifications:
  email:
    on_success: never
